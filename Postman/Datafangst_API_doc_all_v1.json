{
	"id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
	"name": "Datafangst API doc",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"name": "API",
			"description": "",
			"order": [
				"21b89f38-c419-bb41-a7d5-83126064373b",
				"5fc3b0e0-7a9b-752b-d2f6-5190e0505929",
				"d80da9fb-c7f4-0fa8-7551-f0cdcb8a8583",
				"29766483-3663-8ddd-2cd2-bfd6a08c302e",
				"dc530bb4-dd4d-bb5c-9f3d-61f67835a94d",
				"88ef7b36-73f6-b915-a0f1-d221a601d778",
				"15b27495-d818-12d0-3c3f-3f770e50c6ec",
				"6e2b3746-bccf-ee17-2ac2-fad752a89790",
				"42827453-d4ab-dc48-070e-52b9f85d8601",
				"08a00831-e9fa-297c-9a5d-8d4ac30ae8f2",
				"c8163231-c45a-d7a6-4a02-f4b82964994f",
				"24fb7831-88b4-8cbd-76e4-67df4964507f",
				"2c8aef81-546d-2995-acc6-e8fa893d4867",
				"38243633-fcce-a79f-98d1-3eb5a0b5767a",
				"7738d58b-342c-fc45-41b4-1cfeb16e4b90",
				"eb7f661f-b1e7-3d84-b418-c236c4fc4350",
				"a18d2c8f-fd29-8249-4681-786c109708c1",
				"77c0d78c-34fa-82ea-b0e7-bf703ce77015",
				"fada381c-3e9d-5034-c5a0-86110638fc33",
				"6a8916b7-4bf5-9272-aaf3-ad1ccaa771b0"
			],
			"owner": "19557",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folders_order": []
		},
		{
			"name": "Extra",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"order": [
				"2d3a3426-f776-90e8-bd05-5188f99273e5"
			],
			"owner": "19557",
			"folders_order": [],
			"auth": null,
			"id": "c9c26643-f9f2-04b6-dbdf-dab5808dfd17"
		}
	],
	"folders_order": [
		"40b85e15-6a43-eb85-dd6f-12c7f2d57629",
		"c9c26643-f9f2-04b6-dbdf-dab5808dfd17"
	],
	"timestamp": 1512980745509,
	"owner": "19557",
	"public": false,
	"events": [],
	"variables": [],
	"auth": null,
	"requests": [
		{
			"id": "08a00831-e9fa-297c-9a5d-8d4ac30ae8f2",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"headerData": [
				{
					"key": "Accept",
					"value": "application/geo+json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Authorization",
					"value": "{{authorization}}",
					"description": "",
					"enabled": true
				}
			],
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId}}/status",
			"queryParams": [],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1503652408774,
			"name": "hent featurestatus #1",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Feature has correct tag 'Forsterkningslag#1'\"] = response.properties.tag == \"Forsterkningslag#1\";",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Feature has correct tag 'Forsterkningslag#1'\"] = response.properties.tag == \"Forsterkningslag#1\";\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "15b27495-d818-12d0-3c3f-3f770e50c6ec",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"time": 1473067248310,
			"name": "send feature #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;",
							"    tests[\"Feature is accepted\"] = response.validationStatus == \"ACCEPTED\";",
							"    ",
							"    postman.setEnvironmentVariable(\"featureId_no2\", response.featureIdMappings[0].featureId);    ",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"rawModeData": "{\n  \"type\": \"Feature\",\n  \"geometry\": {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n      [ [10.39241731, 63.43053048],\n        [10.39495434, 63.43043698],\n        [10.39579151, 63.42898665],\n        [10.39272171, 63.42909269],\n        [10.39241731, 63.43053048] ]\n    ]\n  },\n  \"properties\": {\n    \"tag\": \"Busker#1\",\n    \"dataCatalogVersion\": \"2.06\",\n    \"typeId\": 511,\n    \"comment\": \"Aner ikke hvilken type det er, alt er buskas for meg...\",\n    \"attributes\": {\n      \"4131\": \"Buskas\",\n      \"10280\": \"2016\"\n    }\n  }\n}",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;\n    tests[\"Feature is accepted\"] = response.validationStatus == \"ACCEPTED\";\n    \n    postman.setEnvironmentVariable(\"featureId_no2\", response.featureIdMappings[0].featureId);    \n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "21b89f38-c419-bb41-a7d5-83126064373b",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/geo+json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Accept",
					"value": "application/json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Authorization",
					"value": "{{authorization}}",
					"description": "",
					"enabled": true
				}
			],
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"queryParams": [],
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8a6b595b-15d8-4045-961e-7fea342369b4",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"contractId\", \"contract-ID\");",
							"",
							"postman.setEnvironmentVariable(\"authorization\", \"Basic XYZ\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3cc805e3-004c-4c7b-94f5-b60d5f03844f",
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 202;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    postman.setEnvironmentVariable(\"featureCollectionId\", response.featureCollectionId);",
							"",
							"}"
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"auth": null,
			"time": 1512980792079,
			"name": "send featurecollection (geojson)",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"preRequestScript": "postman.setEnvironmentVariable(\"contractId\", \"contract-ID\");\n\npostman.setEnvironmentVariable(\"authorization\", \"Basic XYZ\");",
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 202;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    postman.setEnvironmentVariable(\"featureCollectionId\", response.featureCollectionId);\n\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"rawModeData": "{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [ [10.39241731, 63.43053048],\n            [10.39495434, 63.43043698],\n            [10.39579151, 63.42898665],\n            [10.39272171, 63.42909269],\n            [10.39241731, 63.43053048] ]\n        ]\n      },\n      \"properties\": {\n        \"tag\": \"Forsterkningslag#1\",\n        \"dataCatalogVersion\": \"2.07\",\n        \"typeId\": 227,\n        \"comment\": \"Usikker på måledatoen\",\n        \"attributes\": {\n          \"5543\": \"20160802\"\n        }\n      }\n    }\n  ]\n}"
		},
		{
			"id": "24fb7831-88b4-8cbd-76e4-67df4964507f",
			"headers": "Accept: application/json\nAuthorization: {{authorization}}\n",
			"headerData": [
				{
					"key": "Accept",
					"value": "application/json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Authorization",
					"value": "{{authorization}}",
					"description": "",
					"enabled": true
				}
			],
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId_no2}}/status",
			"queryParams": [],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1504509162709,
			"name": "hent featurestatus #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Feature has correct tag 'Busker#1'\"] = response.properties.tag == \"Busker#1\";",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Feature has correct tag 'Busker#1'\"] = response.properties.tag == \"Busker#1\";\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "29766483-3663-8ddd-2cd2-bfd6a08c302e",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472036215914,
			"name": "hent featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct features are included\"] = responseBody.has(\"\\\"attributes\\\":{\\\"5543\\\":\\\"20160802\\\"}\");",
							"    ",
							"    if (response.features.length > 0){",
							"        postman.setEnvironmentVariable(\"featureId\", response.features[0].id);",
							"    }",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct features are included\"] = responseBody.has(\"\\\"attributes\\\":{\\\"5543\\\":\\\"20160802\\\"}\");\n    \n    if (response.features.length > 0){\n        postman.setEnvironmentVariable(\"featureId\", response.features[0].id);\n    }\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "2c8aef81-546d-2995-acc6-e8fa893d4867",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId_no2}}",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"time": 1472752411341,
			"name": "endre feature #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;",
							"    tests[\"Feature is accepted\"] = response.validationStatus == \"ACCEPTED\";",
							"    tests[\"Feature has correct tag 'Busker#1'\"] = response.featureIdMappings[0].tag == \"Busker#1\";",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"rawModeData": "{\n  \"type\": \"Feature\",\n  \"geometry\": {\n    \"type\": \"Polygon\",\n    \"coordinates\": [\n      [ [10.39241731, 63.43053048],\n        [10.39495434, 63.43043698],\n        [10.39579151, 63.42898665],\n        [10.39272171, 63.42909269],\n        [10.39241731, 63.43053048] ]\n    ]\n  },\n  \"properties\": {\n    \"tag\": \"Busker#1\",\n    \"dataCatalogVersion\": \"2.06\",\n    \"typeId\": 511,\n    \"comment\": \"Aner ikke hvilken type det er, alt er buskas for meg...\",\n    \"attributes\": {\n      \"4131\": \"Buskas\",\n      \"10280\": \"2015\"\n    }\n  }\n}",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;\n    tests[\"Feature is accepted\"] = response.validationStatus == \"ACCEPTED\";\n    tests[\"Feature has correct tag 'Busker#1'\"] = response.featureIdMappings[0].tag == \"Busker#1\";\n    \n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "2d3a3426-f776-90e8-bd05-5188f99273e5",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"headerData": [
				{
					"key": "Content-Type",
					"value": "application/geo+json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Accept",
					"value": "application/json",
					"description": "",
					"enabled": true
				},
				{
					"key": "Authorization",
					"value": "{{authorization}}",
					"description": "",
					"enabled": true
				}
			],
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/?destination=FKB",
			"folder": "c9c26643-f9f2-04b6-dbdf-dab5808dfd17",
			"queryParams": [
				{
					"key": "destination",
					"value": "FKB",
					"equals": true,
					"description": "",
					"enabled": true
				}
			],
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b2f9feea-f216-4cb2-879c-0aa78286fa79",
						"type": "text/javascript",
						"exec": [
							"postman.setEnvironmentVariable(\"contractId\", \"contract-ID\");",
							"",
							"postman.setEnvironmentVariable(\"authorization\", \"Basic XYZ\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0c2018c8-79b9-47a5-b513-4a83e0b6c3d8",
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 202;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    postman.setEnvironmentVariable(\"featureCollectionId\", response.featureCollectionId);",
							"",
							"}"
						]
					}
				}
			],
			"pathVariables": {},
			"pathVariableData": [],
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"auth": null,
			"time": 1512980829614,
			"name": "send featurecollection FKB (geojson)",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"isFromCollection": true,
			"collectionRequestId": "2d3a3426-f776-90e8-bd05-5188f99273e5",
			"preRequestScript": "postman.setEnvironmentVariable(\"contractId\", \"contract-ID\");\n\npostman.setEnvironmentVariable(\"authorization\", \"Basic XYZ\");",
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 202;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    postman.setEnvironmentVariable(\"featureCollectionId\", response.featureCollectionId);\n\n}",
			"currentHelper": null,
			"helperAttributes": null,
			"rawModeData": "{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": [\n          [10.39241731, 63.43053048],\n          [10.39495434, 63.43043698],\n          [10.39579151, 63.42898665],\n          [10.39272171, 63.42909269]\n        ]\n      },\n      \"properties\": {\n        \"tag\": \"Rekkverk#1\",\n        \"typeName\": \"Vegrekkverk\",\n        \"comment\": \"Usikker på måledatoen\",\n        \"geometryAttributes\": {\n          \"captureDate\": \"2016-08-02\",\n          \"length\": \"12.3\",\n          \"measurementMethod\": \"96\",\n          \"measurementMethodHeight\": \"96\",\n          \"accuracy\": \"5\",\n          \"accuracyHeight\": \"6\",\n          \"visibility\": \"2\",\n          \"tolerance\": \"4\",\n          \"themeCode\": \"9999\",\n          \"medium\": \"3\",\n          \"municipality\": \"1601\",\n          \"heightRef\": \"0\",\n          \"referenceGeometry\": \"true\"\n        }\n      }\n    }\n  ]\n}"
		},
		{
			"id": "38243633-fcce-a79f-98d1-3eb5a0b5767a",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472753817101,
			"name": "hent oppdatert featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    var forsterkningsTag = false;",
							"    var buskTag = false;",
							"    for (i = 0; i < response.features.length; i++){",
							"        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;",
							"        if (response.features[i].properties.tag == \"Busker#1\") {",
							"            buskTag = true;",
							"            tests[\"Oppdatert verdi for busker: 2015\"] = responseBody.has(\"\\\"10280\\\":\\\"2015\\\"\");",
							"        }",
							"    }",
							"    ",
							"    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;",
							"    tests[\"Tag 'Busker#1' is a feature\"] = buskTag;",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    var forsterkningsTag = false;\n    var buskTag = false;\n    for (i = 0; i < response.features.length; i++){\n        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;\n        if (response.features[i].properties.tag == \"Busker#1\") {\n            buskTag = true;\n            tests[\"Oppdatert verdi for busker: 2015\"] = responseBody.has(\"\\\"10280\\\":\\\"2015\\\"\");\n        }\n    }\n    \n    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;\n    tests[\"Tag 'Busker#1' is a feature\"] = buskTag;\n    \n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "42827453-d4ab-dc48-070e-52b9f85d8601",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472037684418,
			"name": "hent feature #1",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Feature has correct tag 'Forsterkningslag#1'\"] = response.properties.tag == \"Forsterkningslag#1\";",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Feature has correct tag 'Forsterkningslag#1'\"] = response.properties.tag == \"Forsterkningslag#1\";\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "5fc3b0e0-7a9b-752b-d2f6-5190e0505929",
			"headers": "Accept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/status",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472034694154,
			"name": "hent featurecollection status (json)",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct featureCollection\"] = response.featureCollectionId == environment.featureCollectionId;",
							"    tests[\"Status is ACCEPTED\"] = response.validationStatus == \"ACCEPTED\";",
							"",
							"}"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct featureCollection\"] = response.featureCollectionId == environment.featureCollectionId;\n    tests[\"Status is ACCEPTED\"] = response.validationStatus == \"ACCEPTED\";\n\n}",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "6a8916b7-4bf5-9272-aaf3-ad1ccaa771b0",
			"headers": "Accept: application/json\nAuthorization: Basic dG9ybW9zQGthbnRlZ2Eubm86bWFyaXRidDk5\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1490859293617,
			"name": "hent alle featurecollections på kontrakt",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "6e2b3746-bccf-ee17-2ac2-fad752a89790",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472037226996,
			"name": "hent oppdatert featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    var forsterkningsTag = false;",
							"    var buskTag = false;",
							"    for (i = 0; i < response.features.length; i++){",
							"        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;",
							"        if (response.features[i].properties.tag == \"Busker#1\") buskTag = true;",
							"    }",
							"    ",
							"    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;",
							"    tests[\"Tag 'Busker#1' is a feature\"] = buskTag;",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    var forsterkningsTag = false;\n    var buskTag = false;\n    for (i = 0; i < response.features.length; i++){\n        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;\n        if (response.features[i].properties.tag == \"Busker#1\") buskTag = true;\n    }\n    \n    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;\n    tests[\"Tag 'Busker#1' is a feature\"] = buskTag;\n    \n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "7738d58b-342c-fc45-41b4-1cfeb16e4b90",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId_no2}}",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"time": 1472753253180,
			"name": "slett feature #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 204;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"rawModeData": "",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 204;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "77c0d78c-34fa-82ea-b0e7-bf703ce77015",
			"headers": "Accept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1487592302944,
			"name": "hent kontrakter",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "88ef7b36-73f6-b915-a0f1-d221a601d778",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472036640003,
			"name": "hent oppdatert featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct updated features are included\"] = responseBody.has(\"\\\"attributes\\\":{\\\"5543\\\":\\\"20160909\\\"}\");",
							"    ",
							"    if (response.features.length > 0){",
							"        postman.setEnvironmentVariable(\"featureId\", response.features[0].id);",
							"    }",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct updated features are included\"] = responseBody.has(\"\\\"attributes\\\":{\\\"5543\\\":\\\"20160909\\\"}\");\n    \n    if (response.features.length > 0){\n        postman.setEnvironmentVariable(\"featureId\", response.features[0].id);\n    }\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "a18d2c8f-fd29-8249-4681-786c109708c1",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId_no2}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472753952599,
			"name": "hent feature #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 404;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 404;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "c8163231-c45a-d7a6-4a02-f4b82964994f",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/feature/{{featureId_no2}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472037714025,
			"name": "hent feature #2",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Feature has correct tag 'Busker#1'\"] = response.properties.tag == \"Busker#1\";",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Feature has correct tag 'Busker#1'\"] = response.properties.tag == \"Busker#1\";\n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "d80da9fb-c7f4-0fa8-7551-f0cdcb8a8583",
			"headers": "Accept: application/xml\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}/status",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472034704031,
			"name": "hent featurecollection status (xml)",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    tests[\"Correct featureCollection\"] = responseBody.has(\"<featureCollectionId>\"+ environment.featureCollectionId + \"</featureCollectionId>\");",
							"    tests[\"Status is ACCEPTED\"] = responseBody.has(\"<validationStatus>ACCEPTED</validationStatus>\");",
							"",
							"}"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    tests[\"Correct featureCollection\"] = responseBody.has(\"<featureCollectionId>\"+ environment.featureCollectionId + \"</featureCollectionId>\");\n    tests[\"Status is ACCEPTED\"] = responseBody.has(\"<validationStatus>ACCEPTED</validationStatus>\");\n\n}",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "dc530bb4-dd4d-bb5c-9f3d-61f67835a94d",
			"headers": "Content-Type: application/geo+json\nAccept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"time": 1472037797609,
			"name": "endre featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 202;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;",
							"}"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"rawModeData": "{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [ [10.39241731, 63.43053048],\n            [10.39495434, 63.43043698],\n            [10.39579151, 63.42898665],\n            [10.39272171, 63.42909269],\n            [10.39241731, 63.43053048] ]\n        ]\n      },\n      \"properties\": {\n        \"tag\": \"Forsterkningslag#1\",\n        \"dataCatalogVersion\": \"2.06\",\n        \"typeId\": 227,\n        \"comment\": \"Usikker på måledatoen\",\n        \"attributes\": {\n          \"5543\": \"20160909\"\n        }\n      }\n    }\n  ]\n}",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 202;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    tests[\"Correct featurecollection\"] = response.featureCollectionId == environment.featureCollectionId;\n}",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "eb7f661f-b1e7-3d84-b418-c236c4fc4350",
			"headers": "Accept: application/geo+json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}/featurecollection/{{featureCollectionId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1472753926591,
			"name": "hent oppdatert featurecollection",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;",
							"",
							"var statusCode = responseCode.code == assertion_responsecode;",
							"if (statusCode){",
							"    tests[\"Response code is \" + assertion_responsecode] = true;",
							"}",
							"else {",
							"    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + ",
							"    responseCode.name + \")\"] = false;",
							"}",
							"",
							"if (statusCode){",
							"",
							"    var response = JSON.parse(responseBody);",
							"    ",
							"    var forsterkningsTag = false;",
							"    var buskTag = true;",
							"    for (i = 0; i < response.features.length; i++){",
							"        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;",
							"        if (response.features[i].properties.tag == \"Busker#1\") buskTag = false;",
							"    }",
							"    ",
							"    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;",
							"    tests[\"Tag 'Busker#1' is NOT a feature\"] = buskTag;",
							"    tests[\"Only one feature is in the collection\"] = response.features.length == 1;",
							"    ",
							"}",
							""
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;\n\nvar statusCode = responseCode.code == assertion_responsecode;\nif (statusCode){\n    tests[\"Response code is \" + assertion_responsecode] = true;\n}\nelse {\n    tests[\"Response code should be \" + assertion_responsecode + \", but is \" + responseCode.code + \" (\" + \n    responseCode.name + \")\"] = false;\n}\n\nif (statusCode){\n\n    var response = JSON.parse(responseBody);\n    \n    var forsterkningsTag = false;\n    var buskTag = true;\n    for (i = 0; i < response.features.length; i++){\n        if (response.features[i].properties.tag == \"Forsterkningslag#1\") forsterkningsTag = true;\n        if (response.features[i].properties.tag == \"Busker#1\") buskTag = false;\n    }\n    \n    tests[\"Tag 'Forsterkningslag#1' is a feature\"] = forsterkningsTag;\n    tests[\"Tag 'Busker#1' is NOT a feature\"] = buskTag;\n    tests[\"Only one feature is in the collection\"] = response.features.length == 1;\n    \n}\n",
			"currentHelper": null,
			"helperAttributes": null
		},
		{
			"id": "fada381c-3e9d-5034-c5a0-86110638fc33",
			"headers": "Accept: application/json\nAuthorization: {{authorization}}\n",
			"url": "{{url}}/api/v1/contract/{{contractId}}",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "binary",
			"version": 2,
			"time": 1487592325911,
			"name": "hent gitt kontrakt",
			"description": "",
			"collectionId": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"responses": [],
			"rawModeData": "",
			"auth": null,
			"events": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"//console.log(responseBody);",
							"",
							"//Test: ResponseCode",
							"var assertion_responsecode = 200;"
						]
					}
				}
			],
			"collection_id": "d52379e9-6bd9-d74d-bcec-9d7714849337",
			"folder": "40b85e15-6a43-eb85-dd6f-12c7f2d57629",
			"preRequestScript": null,
			"tests": "//console.log(responseBody);\n\n//Test: ResponseCode\nvar assertion_responsecode = 200;",
			"currentHelper": null,
			"helperAttributes": null
		}
	]
}